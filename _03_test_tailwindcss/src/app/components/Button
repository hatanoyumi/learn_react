import { tv } from 'tailwind-variants'
import { normalizeResponsiveStyle } from '@/utils/style'
import type { Responsive } from '@/type'
type Props = {
    color?: Responsive<'primary' | 'secondary'>
    size?: Responsive<'sm' | 'md' | 'lg'>
}

export const Button = (props: Props) => {
const button =
   tv({
     base: 'font-medium bg-blue-500 text-white rounded-full active:opacity-80',
     variants: {
       color: {
         primary: 'bg-blue-500 text-white',
         secondary: 'bg-purple-500 text-white',
       },
       size: {
         sm: 'text-sm',
         md: 'text-base',
         lg: 'px-4 py-3 text-lg',
       },
     },
    defaultVariants: {
        size: 'md',
        color: 'primary'
      }
   },
   {
     responsiveVariants: ['sm', 'md', 'lg', 'xl'] // `true` to apply to all screen sizes
   }
   )
const buttonClass = useMemo(() => {
  return button({ ...normalizeResponsiveStyle(props.size, 'size'), ...normalizeResponsiveStyle(props.color, 'color') }, [props])
})

return (
  <button class={buttonClass}>
    <children />
  </button>
)
}